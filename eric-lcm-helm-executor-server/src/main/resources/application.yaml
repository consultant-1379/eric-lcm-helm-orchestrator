#
# COPYRIGHT Ericsson 2024
#
#
#
# The copyright to the computer program(s) herein is the property of
#
# Ericsson Inc. The programs may be used and/or copied only with written
#
# permission from Ericsson Inc. or in accordance with the terms and
#
# conditions stipulated in the agreement/contract under which the
#
# program(s) have been supplied.
#

# To start app locally you need to change profiles.active to "local"
# and start postgres container:
# docker run -e POSTGRES_PASSWORD=postgres -p 8200:5432 -d postgres

default:
  crd:
    namespace: eric-crd-ns

spring:
  profiles.active: ${SPRING_PROFILES_ACTIVE:dev}
  main:
    cloud-platform: KUBERNETES
    banner-mode: "off"
  application:
    name: eric-lcm-helm-executor
  datasource:
    hikari:
      data-source-properties: stringtype=unspecified
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 300000
  task:
    execution:
      shutdown:
        await-termination: true
        await-termination-period: 45000

  flyway:
    baseline-on-migrate: true

  servlet.multipart:
    max-request-size: 20MB
    max-file-size: 10MB

container-registry:
  url: ""
  username: ""
  password: ""

helmrepo:
  name: ""
  username: ""
  password: ""
  ca-cert: ${HCR_CA:}
  client-cert: ${HCR_CERT:}
  client-key: ${HCR_KEY:}

security:
  tls:
    enabled: ${mTLS_STATE:false}
  serviceMesh:
    enabled: false

directory:
  root: ${java.io.tmpdir}
  certificates: ${CRT_PATH}

operation:
  timeout: 5
  extra-time: 1

logging:
  config: classpath:logback-json.xml
  level:
    root: ${LOG_LEVEL:-INFO}

logPath: ${LOG_PATH:-logs}

server:
  shutdown: graceful

bro:
  host: eric-ctrl-bro
  port: 7001

management:
  endpoints:
    web:
      exposure:
        include: "*"
        exclude: "env,heapdump,threaddump,caches,sessions"
  endpoint:
    health:
      probes:
        enabled: true
      show-details: always
      group:
        readiness:
          include: "livenessState,db"
        liveness:
          include: "readinessState,ping,diskSpace"
  health:
    livenessState:
      enabled: true
    readinessState:
      enabled: true
  certificates:
    enrollment:
      enabled: false
  #Tracing properties
  #management.tracing.propagation.consume // default: [W3C, B3, B3_MULTI]
  tracing:
    propagation:
      produce: ${ERIC_PROPAGATOR_PRODUCE:[B3]}

auto-rollback:
  enabled: false

deleteNamespace:
  default: ${DELETE_NAMESPACE_DEFAULT:TRUE}

refresher:
  secret-name: ""
  namespace: ""

ericsson:
  tracing:
    ca-cert: ${DST_CA:}
    client-cert: ${DST_CERT:}
    client-key: ${DST_KEY:}
    enabled: ${ERIC_TRACING_ENABLED:false}
    exporter:
      endpoint: ${ERIC_EXPORTER_ENDPOINT:http://eric-dst-collector:4317}
      protocol: ${ERIC_EXPORTER_PROTOCOL:grpc}
    sampler:
      jaeger_remote:
        endpoint: ${ERIC_SAMPLER_JAEGER_REMOTE_ENDPOINT:http://eric-dst-collector:14250}
    endpoints:
      exclude: /actuator/prometheus, /actuator/health,/ping, /metric

#Metrics related configurations
management.endpoint.metrics.enabled: "true"
management.endpoints.web.exposure.include: "*"
management.endpoint.prometheus.enabled: "true"
management.prometheus.metrics.export.enabled: "true"
management.metrics.web.server.request.autotime.enabled: "true"
management.info.env.enabled: "true"

#Tracing properties
management.tracing.propagation.produce: ${ERIC_PROPAGATOR_PRODUCE:[B3]}
otel.exporter.otlp.traces.protocol: ${OTEL_EXPORTER_OTLP_TRACES_PROTOCOL:grpc}