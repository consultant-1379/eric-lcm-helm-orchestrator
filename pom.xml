<?xml version="1.0" encoding="UTF-8"?>
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 ~ COPYRIGHT Ericsson 2024
 ~
 ~
 ~
 ~ The copyright to the computer program(s) herein is the property of
 ~
 ~ Ericsson Inc. The programs may be used and/or copied only with written
 ~
 ~ permission from Ericsson Inc. or in accordance with the terms and
 ~
 ~ conditions stipulated in the agreement/contract under which the
 ~
 ~ program(s) have been supplied.
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.ericsson.oss.management</groupId>
    <artifactId>eric-lcm-helm-executor</artifactId>
    <version>0.31.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>Helmfile Executor Service(HFE)</name>

    <properties>

        <!-- Project Specific Properties -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>17</java.version>

        <!-- CI Configuration -->
        <nam.nexus.url>https://arm1s11-eiffel052.eiffel.gic.ericsson.se:8443/nexus</nam.nexus.url>

        <!-- Build Plugins -->
        <buildnumber-maven-plugin.version>1.4</buildnumber-maven-plugin.version>
        <build-helper-maven-plugin.version>3.0.0</build-helper-maven-plugin.version>
        <license-maven-plugin.version>3.0</license-maven-plugin.version>
        <maven-checkstyle-plugin.version>3.0.0</maven-checkstyle-plugin.version>
        <maven-enforcer-plugin.version>3.0.0-M2</maven-enforcer-plugin.version>
        <openapi-generator-maven-plugin.version>7.0.1</openapi-generator-maven-plugin.version>
        <swagger-codegen-maven-plugin.version>3.0.46</swagger-codegen-maven-plugin.version>
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <allure.results.directory>${project.build.directory}/allure-results</allure.results.directory>
        <lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>

        <!-- Jacoco Configuration with Surefire -->
        <jacoco-maven-plugin.minimum>0.9</jacoco-maven-plugin.minimum>
        <jacoco-maven-plugin.version>0.8.8</jacoco-maven-plugin.version>
        <maven-surefire-plugin.version>2.22.0</maven-surefire-plugin.version>

        <!-- Sonar Configuration -->
        <sonar.coverage.jacoco.xmlReportPath>${project.basedir}/target/site/jacoco/jacoco.xml</sonar.coverage.jacoco.xmlReportPath>

        <!-- Ericsson Dependencies -->
        <eric.common.logging.version>2.0.1</eric.common.logging.version>

        <!-- 3PP Dependencies -->
        <spring-boot.version>3.1.11</spring-boot.version>
        <spring-cloud.version>2022.0.4</spring-cloud.version>
        <spring-cloud-starter-contract.version>4.0.4</spring-cloud-starter-contract.version>
        <spring-retry.version>2.0.2</spring-retry.version>
        <allure-testng.version>2.17.3</allure-testng.version>
        <kubernetes-client.version>6.2.0</kubernetes-client.version>
        <kubernetes-server-mock.version>6.2.0</kubernetes-server-mock.version>
        <spring-cloud-starter-kubernetes-fabric8-config.version>3.0.4</spring-cloud-starter-kubernetes-fabric8-config.version>
        <postgresql.version>42.5.5</postgresql.version>
        <flyway-core.version>9.16.3</flyway-core.version>
        <assertj-core.version>3.23.1</assertj-core.version>
        <junit-jupiter.version>5.9.3</junit-jupiter.version>
        <postgresql.test.version>1.18.0</postgresql.test.version>
        <testcontainers.test.version>1.18.0</testcontainers.test.version>
        <testng.version>7.7.0</testng.version>
        <jackson-databind-nullable.version>0.2.6</jackson-databind-nullable.version>
        <commons-io.version>2.15.0</commons-io.version>
        <archunit.version>0.21.0</archunit.version>
        <aspectjweaver.version>1.9.19</aspectjweaver.version>
        <awaitility.version>4.2.0</awaitility.version>
        <lombok.version>1.18.28</lombok.version>
        <micrometer.prometheus.version>1.11.6</micrometer.prometheus.version>
        <micrometer-tracing.version>1.1.7</micrometer-tracing.version>
        <openelementry.java.version>1.25.0</openelementry.java.version>
        <swagger-core.version>2.2.14</swagger-core.version>
        <validation-api.version>2.0.1.Final</validation-api.version>
        <guava.version>32.1.2-jre</guava.version>
        <commons-text.version>1.10.0</commons-text.version>
        <snakeyaml.version>2.0</snakeyaml.version>
        <mapstruct.version>1.5.5.Final</mapstruct.version>
        <okio-jvm.version>3.6.0</okio-jvm.version>
        <okio-http.version>4.12.0</okio-http.version>
        <logback.version>1.4.14</logback.version>
        <bcpkix-jdk18on.version>1.78.1</bcpkix-jdk18on.version>

    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.ericsson.oss.management</groupId>
                <artifactId>eric-lcm-helm-executor-service-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.ericsson.oss.management</groupId>
                <artifactId>eric-lcm-helm-executor-server</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.ericsson.oss.management</groupId>
                <artifactId>eric-lcm-helm-executor-testware</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.ericsson.oss.management</groupId>
                <artifactId>eric-lcm-helm-executor-bro</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>
            <dependency>
                <groupId>org.awaitility</groupId>
                <artifactId>awaitility</artifactId>
                <version>${awaitility.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-parent</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
                <exclusions>
                    <exclusion>
                        <groupId>org.postgresql</groupId>
                        <artifactId>postgresql</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-jpa</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.retry</groupId>
                <artifactId>spring-retry</artifactId>
                <version>${spring-retry.version}</version>
            </dependency>
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgresql.version}</version>
            </dependency>
            <dependency>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-core</artifactId>
                <version>${flyway-core.version}</version>
            </dependency>
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${assertj-core.version}</version>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>junit-jupiter</artifactId>
                <version>${testcontainers.test.version}</version>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgresql.test.version}</version>
            </dependency>
            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-core</artifactId>
                <version>${micrometer.prometheus.version}</version>
            </dependency>
            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-registry-prometheus</artifactId>
                <version>${micrometer.prometheus.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-actuator</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-contract-verifier</artifactId>
                <version>${spring-cloud-starter-contract.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.springframework.cloud</groupId>
                        <artifactId>spring-cloud-contract-spec</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-contract-spec</artifactId>
                <version>${spring-cloud-starter-contract.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework.cloud</groupId>
                        <artifactId>spring-cloud-contract-spec-java</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.tngtech.archunit</groupId>
                <artifactId>archunit-junit5</artifactId>
                <version>${archunit.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-validation</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>io.fabric8</groupId>
                <artifactId>kubernetes-client</artifactId>
                <version>${kubernetes-client.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-kubernetes-fabric8-config</artifactId>
                <version>${spring-cloud-starter-kubernetes-fabric8-config.version}</version>
            </dependency>
            <dependency>
                <groupId>io.fabric8</groupId>
                <artifactId>kubernetes-server-mock</artifactId>
                <version>${kubernetes-server-mock.version}</version>
            </dependency>
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcpkix-jdk18on</artifactId>
                <version>${bcpkix-jdk18on.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.okio</groupId>
                <artifactId>okio-jvm</artifactId>
                <version>${okio-jvm.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.okhttp3</groupId>
                <artifactId>okhttp</artifactId>
                <version>${okio-http.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.okhttp3</groupId>
                <artifactId>logging-interceptor</artifactId>
                <version>${okio-http.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.testng</groupId>
                <artifactId>testng</artifactId>
                <version>${testng.version}</version>
            </dependency>
            <dependency>
                <groupId>io.qameta.allure</groupId>
                <artifactId>allure-testng</artifactId>
                <version>${allure-testng.version}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger.core.v3</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger-core.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openapitools</groupId>
                <artifactId>jackson-databind-nullable</artifactId>
                <version>${jackson-databind-nullable.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-text</artifactId>
                <version>${commons-text.version}</version>
            </dependency>
            <dependency>
                <groupId>org.yaml</groupId>
                <artifactId>snakeyaml</artifactId>
                <version>${snakeyaml.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>${logback.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>com.ericsson.oss.orchestration.eo</groupId>
            <artifactId>eric-common-logging</artifactId>
            <version>${eric.common.logging.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-tracing-bridge-otel</artifactId>
            <version>${micrometer-tracing.version}</version>
        </dependency>
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-exporter-otlp</artifactId>
            <version>${openelementry.java.version}</version>
        </dependency>
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-sdk-extension-jaeger-remote-sampler</artifactId>
            <version>${openelementry.java.version}</version>
        </dependency>
    </dependencies>

    <distributionManagement>
        <repository>
            <id>release</id>
            <name>armseligic-release</name>
            <url>https://arm.seli.gic.ericsson.se/artifactory/proj-eric-oss-release-local</url>
        </repository>
        <snapshotRepository>
            <id>snapshot</id>
            <name>armseligic-snapshot</name>
            <url>https://arm.seli.gic.ericsson.se/artifactory/proj-eric-oss-dev-local</url>
        </snapshotRepository>
    </distributionManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.aspectj</groupId>
                            <artifactId>aspectjweaver</artifactId>
                            <version>${aspectjweaver.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>org.junit.jupiter</groupId>
                            <artifactId>junit-jupiter-engine</artifactId>
                            <version>${junit-jupiter.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <annotationProcessorPaths>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                                <version>${lombok.version}</version>
                            </path>
                            <path>
                                <groupId>org.mapstruct</groupId>
                                <artifactId>mapstruct-processor</artifactId>
                                <version>${mapstruct.version}</version>
                            </path>
                            <dependency>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok-mapstruct-binding</artifactId>
                                <version>${lombok-mapstruct-binding.version}</version>
                            </dependency>
                        </annotationProcessorPaths>
                        <compilerArgument>-Xlint:-processing</compilerArgument>
<!--                        For avoiding warn message with -param. Spring wrote that they fix this bug in spring 6.0.3 but problem still exist-->
                        <compilerArgs>
                            <arg>-parameters</arg>
                        </compilerArgs>
                        <showWarnings>true</showWarnings>
                        <failOnWarning>true</failOnWarning>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${build-helper-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>buildnumber-maven-plugin</artifactId>
                    <version>${buildnumber-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>io.swagger</groupId>
                    <artifactId>swagger-codegen-maven-plugin</artifactId>
                    <version>${swagger-codegen-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${maven-enforcer-plugin.version}</version>
                    <configuration>
                        <rules>
                            <bannedDependencies>
                                <excludes>
                                    <exclude>org.apache.logging.log4j:log4j-core</exclude>
                                    <exclude>org.slf4j:slf4j-log4j12</exclude>
                                    <exclude>log4j</exclude>
                                    <exclude>commons-logging</exclude>
                                </excludes>
                                <message>
                                    [CONFLICT] In the project were found conflicting logging dependencies that can affect on logging
                                    format. Please, check your dependency tree and exclude it. See:
                                    https://maven.apache.org/plugins/maven-dependency-plugin/examples/resolving-conflicts-using-the-dependency-tree.html
                                </message>
                            </bannedDependencies>
                        </rules>
                        <fail>true</fail>
                    </configuration>
                    <executions>
                        <execution>
                            <id>enforce-banned-dependencies</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.springframework.cloud</groupId>
                    <artifactId>spring-cloud-contract-maven-plugin</artifactId>
                    <version>${spring-cloud-starter-contract.version}</version>
                    <extensions>true</extensions>
                    <configuration>
                        <packageWithBaseClasses>com.ericsson.oss.management.lcm.contracts.base</packageWithBaseClasses>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.openapitools</groupId>
                    <artifactId>openapi-generator-maven-plugin</artifactId>
                    <version>${openapi-generator-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>base-model</id>
                            <goals>
                                <goal>generate</goal>
                            </goals>
                            <configuration>
                                <inputSpec>${project.basedir}/src/main/resources/openapi.yaml</inputSpec>
                                <generatorName>spring</generatorName>
                                <configOptions>
                                    <library>spring-boot</library>
                                    <interfaceOnly>true</interfaceOnly>
                                    <skipDefaultInterface>true</skipDefaultInterface>
                                    <useBeanValidation>true</useBeanValidation>
                                    <oas3>true</oas3>
                                    <useSpringfox>false</useSpringfox>
                                    <useJakartaEe>true</useJakartaEe>
                                    <dateLibrary>java8</dateLibrary>
                                </configOptions>
                                <apiPackage>com.ericsson.oss.management.lcm.api</apiPackage>
                                <modelPackage>com.ericsson.oss.management.lcm.api.model</modelPackage>
                                <groupId>${project.groupId}</groupId>
                                <artifactId>${project.artifactId}</artifactId>
                                <artifactVersion>${project.version}</artifactVersion>
                                <environmentVariables>
                                    <enablePostProcessFile>true</enablePostProcessFile>
                                </environmentVariables>
                            </configuration>
                        </execution>
                        <execution>
                            <id>document-model</id>
                            <goals>
                                <goal>generate</goal>
                            </goals>
                            <configuration>
                                <inputSpec>${project.basedir}/src/main/resources/openapi.yaml</inputSpec>
                                <generatorName>html</generatorName>
                                <output>${project.build.directory}/generated-sources/api-doc</output>
                                <configOptions>
                                    <infoUrl>https://adp.ericsson.se/marketplace/helmfile-executor/documentation/development/additional-documents/</infoUrl>
                                    <infoEmail>https://adp.ericsson.se/marketplace/helmfile-executor/team</infoEmail>
                                </configOptions>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <profile>
            <id>sonar</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <sonar.coverage.exclusions>
                    **/HelmfileExecutorApplication.java,
                    **/SecretContextRefreshEventHandler.java,
                    **/SecretPropertySourceWatcher.java,
                    **/acceptance/**,
                    **/model/**,
                    **/charts/**,
                    **/tracing/**
                </sonar.coverage.exclusions>
                <sonar.cpd.exclusions>
                    **/HelmfileExecutorApplication.java,
                    **/SecretContextRefreshEventHandler.java,
                    **/SecretPropertySourceWatcher.java,
                    **/PaginationUtils.java,
                    **/PaginationUtils.java,
                    **/CustomPageRequest.java,
                    **/HelmSourceLCMTest.java,
                    **/Resource.java
                </sonar.cpd.exclusions>
            </properties>
        </profile>
        <profile>
            <id>test</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <modules>
                <module>eric-lcm-helm-executor-service-api</module>
                <module>eric-lcm-helm-executor-server</module>
                <module>eric-lcm-helm-executor-testware</module>
                <module>eric-lcm-helm-executor-bro</module>
            </modules>
            <properties>
                <test.source>${project.basedir}/src/test/java</test.source>
                <test.output>${project.build.directory}/test-classes</test.output>
            </properties>
            <build>
                <testResources>
                    <testResource>
                        <directory>${project.basedir}/src/test/resources</directory>
                    </testResource>
                </testResources>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>jacoco-site</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                            </execution>
                            <!-- attached to Maven test phase -->
                            <execution>
                                <id>report</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>target/jacoco-report</outputDirectory>
                                </configuration>
                            </execution>
                            <execution>
                                <id>jacoco-check</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <rule implementation="org.jacoco.maven.RuleConfiguration">
                                            <element>BUNDLE</element>
                                            <limits>
                                                <limit implementation="org.jacoco.report.check.Limit">
                                                    <counter>INSTRUCTION</counter>
                                                    <value>COVEREDRATIO</value>
                                                    <minimum>${jacoco-maven-plugin.minimum}</minimum>
                                                </limit>
                                            </limits>
                                        </rule>
                                    </rules>
                                    <excludes>
                                        <exclude>com/ericsson/oss/management/lcm/model/clusterconnection/*</exclude>
                                        <exclude>com/ericsson/oss/management/lcm/model/entity/*</exclude>
                                        <exclude>**/exceptions/*</exclude>
                                    </excludes>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-checkstyle-plugin</artifactId>
                        <version>${maven-checkstyle-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>validate</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                                <configuration>
                                    <configLocation>./checkstyle.xml</configLocation>
                                    <failOnViolation>true</failOnViolation>
                                    <logViolationsToConsole>true</logViolationsToConsole>
                                    <includeTestSourceDirectory>true</includeTestSourceDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.mycila</groupId>
                        <artifactId>license-maven-plugin</artifactId>
                        <version>${license-maven-plugin.version}</version>
                        <configuration>
                            <header>./license/copyright.txt</header>
                            <validHeaders>
                                <validHeader>license/copyright-2024.txt</validHeader>
                            </validHeaders>
                            <properties>
                                <license.year>2024</license.year>
                            </properties>
                            <excludes>
                                <exclude>**/*.properties</exclude>
                                <exclude>**/*.repo</exclude>
                                <exclude>**/*.tgz</exclude>
                                <exclude>**/.bob*/**</exclude>
                                <exclude>**/.helmignore</exclude>
                                <exclude>**/.kube/**</exclude>
                                <exclude>**/.m2/</exclude>
                                <exclude>**/_helpers.tpl</exclude>
                                <exclude>**/allure-report/</exclude>
                                <exclude>**/build/**</exclude>
                                <exclude>**/charts/**</exclude>
                                <exclude>**/ci_config/**</exclude>
                                <exclude>**/config/**</exclude>
                                <exclude>**/Docker/**</exclude>
                                <exclude>**/eric-lcm-helm-executor/templates/**</exclude>
                                <exclude>**/fossa/**</exclude>
                                <exclude>**/integration-chart/**</exclude>
                                <exclude>**/Jenkins/**</exclude>
                                <exclude>**/Jenkinsinit/**</exclude>
                                <exclude>**/LOG_PATH_IS_UNDEFINED/**</exclude>
                                <exclude>**/postman/**</exclude>
                                <exclude>**/resources/db/</exclude>
                                <exclude>**/src/test/resources/</exclude>
                                <exclude>**/testData/**</exclude>
                                <exclude>**/va_reports/**</exclude>
                                <exclude>**/va_tools/**</exclude>
                                <exclude>**/VERSION*</exclude>
                                <exclude>*artifact.properties</exclude>
                                <exclude>.project_*</exclude>
                                <exclude>charts/secrets.yaml</exclude>
                                <exclude>checkstyle.xml</exclude>
                                <exclude>ci-release-values.yaml</exclude>
                                <exclude>ci-values.yaml</exclude>
                                <exclude>checkstyle-ignore.xml</exclude>
                                <exclude>pom.xml</exclude>
                                <exclude>common-properties.yaml</exclude>
                                <exclude>design-rule-check-report*</exclude>
                                <exclude>Dockerfile</exclude>
                                <exclude>env_var_bob</exclude>
                                <exclude>fossa-deps.yaml</exclude>
                                <exclude>JenkinsfilePrecodereview</exclude>
                                <exclude>JenkinsfileRelease</exclude>
                                <exclude>license/</exclude>
                                <exclude>marketplace/**</exclude>
                                <exclude>settings.xml</exclude>
                                <exclude>mvn-settings.xml</exclude>
                                <exclude>pom.xml.versionsBackup</exclude>
                                <exclude>PRODUCT_INFO.yaml</exclude>
                                <exclude>ruleset2.0.pra.mimer.yaml</exclude>
                                <exclude>ruleset2.0.yaml</exclude>
                                <exclude>scripts/</exclude>
                                <exclude>.bob/*</exclude>
                                <exclude>.bob*/</exclude>
                                <exclude>bob/*</exclude>
                                <exclude>bob*/</exclude>
                                <exclude>k8s-logs/*</exclude>
                                <exclude>**/.helmignore</exclude>
                                <exclude>**/*.html</exclude>
                                <exclude>**/_helpers.tpl</exclude>
                                <exclude>**/*.tgz</exclude>
                                <exclude>**/VERSION*</exclude>
                                <exclude>**/*.repo</exclude>
                                <exclude>license/copyright*</exclude>
                                <exclude>design-rule-check-report*</exclude>
                                <exclude>helm-install-dry-run.log</exclude>
                                <exclude>*artifact.properties</exclude>
                                <exclude>**/*.txt</exclude>
                                <exclude>**/custom_stages.yaml</exclude>
                                <exclude>ci/scripts/update_cbos.sh</exclude>
                                <exclude>**/*.Jenkinsfile</exclude>
                                <exclude>**/*.adoc</exclude>
                                <exclude>**/*.config</exclude>
                                <exclude>**/rest2html*.zip</exclude>
                                <exclude>**/fossa/*</exclude>
                                <exclude>**/ci/**</exclude>
                                <exclude>ci-cd/*</exclude>
                                <exclude>ci-cd*/</exclude>
                                <exclude>ci*/</exclude>
                                <exclude>**/config/</exclude>
                                <exclude>generated/*</exclude>
                                <exclude>generated*/</exclude>
                                <exclude>dependencies/*</exclude>
                                <exclude>dependencies*/</exclude>
                            </excludes>
                            <headerDefinitions>
                                <headerDefinition>./license/javaHeaderDefinition.xml</headerDefinition>
                                <headerDefinition>./license/xmlHeaderDefinition.xml</headerDefinition>
                            </headerDefinitions>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>acceptance</id>
            <modules>
                <module>eric-lcm-helm-executor-testware</module>
            </modules>
            <properties>
                <test.source>${project.basedir}/src/main/java</test.source>
                <test.output>${project.build.directory}/test-classes</test.output>
            </properties>
            <build>
                <testResources>
                    <testResource>
                        <directory>${project.basedir}/src/main/resources</directory>
                    </testResource>
                </testResources>
            </build>
        </profile>
    </profiles>
</project>
